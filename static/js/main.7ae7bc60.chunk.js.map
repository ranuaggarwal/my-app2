{"version":3,"sources":["ItemTypes.js","DropContainer.jsx","DraggableItem.jsx","index.js"],"names":["style","height","width","float","marginLeft","marginTop","border","DropContainer","lastDroppedItem","onDrop","useDrop","accept","ItemTypes","drop","item","name","collect","monitor","isOver","canDrop","borderStyle","ref","borderColor","textAlign","SetDropContainer","props","useState","setLastDroppedItem","handleDrop","useCallback","backgroundColor","marginRight","cursor","fontWeight","lineHeight","fontSize","DraggableItem","useDrag","type","opacity","isDragging","drag","rootElement","document","getElementById","ReactDOM","render","className","DndProvider","backend","Backend","overflow","clear","padding"],"mappings":"+NAAe,EACN,MCEHA,EAAQ,CACZC,OAAQ,OACRC,MAAO,QACPC,MAAO,OACPC,WAAY,MACZC,UAAW,MACXC,OAAQ,mBAEJC,EAAgB,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,gBAAiBC,EAAa,EAAbA,OAAa,EACjBC,YAAQ,CAC1CC,OAAQC,EACRC,KAF0C,SAErCC,GACHL,EAAOK,EAAKC,OAEdC,QAAS,SAAAC,GAAO,MAAK,CACnBC,OAAQD,EAAQC,SAChBC,QAASF,EAAQE,cARgC,0BAC5CD,EAD4C,EAC5CA,OAAQC,EADoC,EACpCA,QAAWN,EADyB,KAajDO,EAAc,QAMlB,OARiBD,GAAWD,EAI1BE,EAAc,QACLD,IACTC,EAAc,UAGd,yBAAKC,IAAKR,EAAMb,MAAK,eAAOA,EAAP,CAAcsB,YARnB,QAQgCF,iBAC7CZ,GACC,yBAAKR,MAAO,CAAEuB,UAAW,SAAU,WAAc,SAAWf,KAoBrDgB,EAZU,SAAAC,GAAU,IAAD,EACcC,mBAAS,MADvB,mBACzBlB,EADyB,KACRmB,EADQ,KAE1BC,EAAaC,uBAAY,SAAAf,GAAI,OAAIa,EAAmBb,KAAO,IACjE,OACE,kBAAC,EAAD,iBACMW,EADN,CAEEjB,gBAAiBA,EACjBC,OAAQmB,M,QC7CR5B,EAAQ,CACZM,OAAQ,iBACRwB,gBAAiB,QACjBC,YAAa,OACbC,OAAQ,OACR7B,MAAO,OACP8B,WAAY,OACZhC,OAAQ,OACRC,MAAO,OACPqB,UAAW,SACXW,WAAY,OACZC,SAAS,QAeIC,EAbO,SAAC,GAAc,IAAZrB,EAAW,EAAXA,KAAW,EACNsB,YAAQ,CAClCvB,KAAM,CAAEC,OAAMuB,KAAM1B,GACpBI,QAAS,SAAAC,GAAO,MAAK,CACnBsB,QAAStB,EAAQuB,aAAe,GAAM,MAJR,mBACzBD,EADyB,KACzBA,QAAWE,EADc,KAOlC,OACE,yBAAKpB,IAAKoB,EAAMzC,MAAK,eAAOA,EAAP,CAAcuC,aAChCxB,ICQP,IAAM2B,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,mBA1BhB,WACC,OACC,yBAAKC,UAAU,OACd,kBAACC,EAAA,EAAD,CAAaC,QAASC,KACrB,6BACC,yBAAKlD,MAAO,CAAEmD,SAAU,SAAUC,MAAO,OAAQ/C,UAAW,SAC3D,yBAAKL,MAAO,CAAEG,MAAO,OAAQE,UAAW,SAAxC,iCACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,OAED,yBAAKL,MAAO,CAAEmD,SAAU,SAAUC,MAAO,OAAQ/C,UAAW,OAAQyB,gBAAiB,UAAWuB,QAAS,uBACxG,kBAAC,EAAD,CAAetC,KAAK,QACpB,kBAAC,EAAD,CAAeA,KAAK,WACpB,kBAAC,EAAD,CAAeA,KAAK,UACpB,kBAAC,EAAD,CAAeA,KAAK,SACpB,kBAAC,EAAD,CAAeA,KAAK,UACpB,kBAAC,EAAD,CAAeA,KAAK,eASV,MAAS2B,K","file":"static/js/main.7ae7bc60.chunk.js","sourcesContent":["export default {\r\n    BOX: 'box',\r\n  }","import React, { useState, useCallback } from 'react'\r\nimport { useDrop } from 'react-dnd'\r\nimport ItemTypes from './ItemTypes'\r\nconst style = {\r\n  height: '25px',\r\n  width: '100px',\r\n  float: 'left',\r\n  marginLeft: '8px',\r\n  marginTop: '4px',\r\n  border: '1px solid black'\r\n}\r\nconst DropContainer = ({ lastDroppedItem, onDrop }) => {\r\n  const [{ isOver, canDrop }, drop] = useDrop({\r\n    accept: ItemTypes.BOX,\r\n    drop(item) {\r\n      onDrop(item.name)\r\n    },\r\n    collect: monitor => ({\r\n      isOver: monitor.isOver(),\r\n      canDrop: monitor.canDrop(),\r\n    }),\r\n  })\r\n  const isActive = canDrop && isOver\r\n  let borderColor = 'black'\r\n  let borderStyle = 'solid'\r\n  if (isActive) {\r\n    borderStyle = 'solid'\r\n  } else if (canDrop) {\r\n    borderStyle = 'dotted'\r\n  } \r\n  return (\r\n    <div ref={drop} style={{ ...style, borderColor, borderStyle }}>\r\n      {lastDroppedItem && (\r\n        <div style={{ textAlign: 'center', 'lineHeight': '25px' }}>{lastDroppedItem}</div>\r\n      )\r\n      \r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nconst SetDropContainer = props => {\r\n  const [lastDroppedItem, setLastDroppedItem] = useState(null)\r\n  const handleDrop = useCallback(item => setLastDroppedItem(item), [])\r\n  return (\r\n    <DropContainer\r\n      {...props}\r\n      lastDroppedItem={lastDroppedItem}\r\n      onDrop={handleDrop}\r\n    />\r\n  )\r\n}\r\n\r\nexport default SetDropContainer\r\n","import React from 'react'\r\nimport { useDrag } from 'react-dnd'\r\nimport ItemTypes from './ItemTypes'\r\nconst style = {\r\n  border: '1px solid grey',\r\n  backgroundColor: 'white',\r\n  marginRight: '15px',\r\n  cursor: 'move',\r\n  float: 'left', \r\n  fontWeight: 'bold',\r\n  height: '22px',\r\n  width: '80px',\r\n  textAlign: 'Center',\r\n  lineHeight: '22px',\r\n  fontSize:'13px'\r\n}\r\nconst DraggableItem = ({ name }) => {\r\n  const [{ opacity }, drag] = useDrag({\r\n    item: { name, type: ItemTypes.BOX  },\r\n    collect: monitor => ({\r\n      opacity: monitor.isDragging() ? 0.4 : 1,\r\n    }),\r\n  })\r\n  return (\r\n    <div ref={drag} style={{ ...style, opacity }}>\r\n      {name}\r\n    </div>\r\n  )\r\n}\r\nexport default DraggableItem\r\n","\nimport React, { useState, useCallback } from 'react'\nimport ReactDOM from 'react-dom'\nimport { DndProvider } from 'react-dnd'\nimport Backend from 'react-dnd-html5-backend'\nimport DropContainer from './DropContainer'\nimport DraggableItem from './DraggableItem'\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<DndProvider backend={Backend}>\n\t\t\t\t<div>\n\t\t\t\t\t<div style={{ overflow: 'hidden', clear: 'both', marginTop: '20px' }}>\n\t\t\t\t\t\t<div style={{ float: 'left', marginTop: '10px'}}>The three primary colors are </div>\n\t\t\t\t\t\t<DropContainer/>\n\t\t\t\t\t\t<DropContainer/>\n\t\t\t\t\t\t<DropContainer/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style={{ overflow: 'hidden', clear: 'both', marginTop: '20px', backgroundColor: '#b4c7e7', padding: '15px 0px 15px 15px'}}>\n\t\t\t\t\t\t<DraggableItem name=\"Red\" />\n\t\t\t\t\t\t<DraggableItem name=\"Yellow\" />\n\t\t\t\t\t\t<DraggableItem name=\"White\" />\n\t\t\t\t\t\t<DraggableItem name=\"Blue\" />\n\t\t\t\t\t\t<DraggableItem name=\"Green\" />\n\t\t\t\t\t\t<DraggableItem name=\"Cyan\"  />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</DndProvider>\n\t\t</div>\n\t)\n}\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(<App />, rootElement)"],"sourceRoot":""}